setTime(1656206817.919);E.setTimeZone(2)

const Layout = (() => {
  function p(b,k){function d(h){h.id&&(f[h.id]=h);h.type||(h.type="");h.c&&h.c.forEach(d)}this._l=this.l=b;this.physBtns=2==process.env.HWVERSION?1:3;this.options=k||{};this.lazy=this.options.lazy||!1;if(2!=process.env.HWVERSION){var a=[];function h(m){"btn"==m.type&&a.push(m);m.c&&m.c.forEach(h)}h(b);a.length&&(this.physBtns=0,this.buttons=a,this.selectedButton=-1)}if(this.options.btns)if(this.b=b=this.options.btns,this.physBtns>=b.length){let h=Math.floor(Bangle.appRect.h/
this.physBtns);for(2<this.physBtns&&1==b.length&&b.unshift({label:""});this.physBtns>b.length;)b.push({label:""});this._l.width=g.getWidth()-8;this._l={type:"h",filly:1,c:[this._l,{type:"v",pad:1,filly:1,c:b.map(m=>(m.type="txt",m.font="6x8",m.height=h,m.r=1,m))}]}}else this._l.width=g.getWidth()-32,this._l={type:"h",c:[this._l,{type:"v",c:b.map(h=>(h.type="btn",h.filly=1,h.width=32,h.r=1,h))}]},a&&a.push.apply(a,this._l.c[1].c);this.setUI();var f=this;d(this._l);this.updateNeeded=!0}function r(b,
k,d,a,f){var h=null==b.bgCol?f:g.toColor(b.bgCol);if(h!=f||"txt"==b.type||"btn"==b.type||"img"==b.type||"custom"==b.type){var m=b.c;delete b.c;var c="H"+E.CRC32(E.toJS(b));m&&(b.c=m);delete k[c]||((a[c]=[b.x,b.y,b.x+b.w-1,b.y+b.h-1]).bg=null==f?g.theme.bg:f,d&&(d.push(b),d=null))}if(b.c)for(var l of b.c)r(l,k,d,a,h)}p.prototype.setUI=function(){Bangle.setUI();let b;this.buttons&&(Bangle.setUI({mode:"updown",back:this.options.back},k=>{var d=this.selectedButton,a=this.buttons.length;if(void 0===k&&
this.buttons[d])return this.buttons[d].cb();this.buttons[d]&&(delete this.buttons[d].selected,this.render(this.buttons[d]));d=(d+a+k)%a;this.buttons[d]&&(this.buttons[d].selected=1,this.render(this.buttons[d]));this.selectedButton=d}),b=!0);this.options.back&&!b&&Bangle.setUI({mode:"custom",back:this.options.back});if(this.b){function k(d,a){.75<a.time-a.lastTime&&this.b[d].cbl?this.b[d].cbl(a):this.b[d].cb&&this.b[d].cb(a)}Bangle.btnWatches&&Bangle.btnWatches.forEach(clearWatch);Bangle.btnWatches=
[];this.b[0]&&Bangle.btnWatches.push(setWatch(k.bind(this,0),BTN1,{repeat:!0,edge:-1}));this.b[1]&&Bangle.btnWatches.push(setWatch(k.bind(this,1),BTN2,{repeat:!0,edge:-1}));this.b[2]&&Bangle.btnWatches.push(setWatch(k.bind(this,2),BTN3,{repeat:!0,edge:-1}))}if(2==process.env.HWVERSION){function k(d,a){d.cb&&a.x>=d.x&&a.y>=d.y&&a.x<=d.x+d.w&&a.y<=d.y+d.h&&(2==a.type&&d.cbl?d.cbl(a):d.cb&&d.cb(a));d.c&&d.c.forEach(f=>k(f,a))}Bangle.touchHandler=(d,a)=>k(this._l,a);Bangle.on("touch",Bangle.touchHandler)}};
p.prototype.render=function(b){function k(c){"ram";g.reset();void 0!==c.col&&g.setColor(c.col);void 0!==c.bgCol&&g.setBgColor(c.bgCol).clearRect(c.x,c.y,c.x+c.w-1,c.y+c.h-1);d[c.type](c)}b||(b=this._l);this.updateNeeded&&this.update();var d={"":function(){},txt:function(c){if(c.wrap){g.setFont(c.font).setFontAlign(0,-1);var l=g.wrapString(c.label,c.w),e=c.y+(c.h-g.getFontHeight()*l.length>>1);l.forEach((n,q)=>g.drawString(n,c.x+(c.w>>1),e+g.getFontHeight()*q))}else g.setFont(c.font).setFontAlign(0,
0,c.r).drawString(c.label,c.x+(c.w>>1),c.y+(c.h>>1))},btn:function(c){var l=c.x+(0|c.pad),e=c.y+(0|c.pad),n=c.w-(c.pad<<1),q=c.h-(c.pad<<1);l=[l,e+4,l+4,e,l+n-5,e,l+n-1,e+4,l+n-1,e+q-5,l+n-5,e+q-1,l+4,e+q-1,l,e+q-5,l,e+4];e=c.selected?g.theme.bgH:g.theme.bg2;g.setColor(e).fillPoly(l).setColor(c.selected?g.theme.fgH:g.theme.fg2).drawPoly(l);void 0!==c.col&&g.setColor(c.col);c.src?g.setBgColor(e).drawImage("function"==typeof c.src?c.src():c.src,c.x+c.w/2,c.y+c.h/2,{scale:c.scale||void 0,rotate:.5*Math.PI*
(c.r||0)}):g.setFont(c.font||"6x8:2").setFontAlign(0,0,c.r).drawString(c.label,c.x+c.w/2,c.y+c.h/2)},img:function(c){g.drawImage("function"==typeof c.src?c.src():c.src,c.x+c.w/2,c.y+c.h/2,{scale:c.scale||void 0,rotate:.5*Math.PI*(c.r||0)})},custom:function(c){c.render(c)},h:function(c){c.c.forEach(k)},v:function(c){c.c.forEach(k)}};if(this.lazy){this.rects||(this.rects={});var a=this.rects.clone(),f=[];r(b,a,f,this.rects,null);for(var h in a)delete this.rects[h];b=Object.keys(a).map(c=>a[c]).reverse();
for(var m of b)g.setBgColor(m.bg).clearRect.apply(g,m);f.forEach(k)}else k(b)};p.prototype.forgetLazyState=function(){this.rects={}};p.prototype.layout=function(b){switch(b.type){case "h":var k=b.x+(0|b.pad),d=0,a=b.c&&b.c.reduce((e,n)=>e+(0|n.fillx),0);a||(k+=b.w-b._w>>1,a=1);var f=k;b.c.forEach(e=>{e.x=0|f;k+=e._w;d+=0|e.fillx;f=k+Math.floor(d*(b.w-b._w)/a);e.w=0|f-e.x;e.h=0|(e.filly?b.h-(b.pad<<1):e._h);e.y=0|b.y+(0|b.pad)+((1+(0|e.valign))*(b.h-(b.pad<<1)-e.h)>>1);e.c&&this.layout(e)});break;
case "v":var h=b.y+(0|b.pad),m=0,c=b.c&&b.c.reduce((e,n)=>e+(0|n.filly),0);c||(h+=b.h-b._h>>1,c=1);var l=h;b.c.forEach(e=>{e.y=0|l;h+=e._h;m+=0|e.filly;l=h+Math.floor(m*(b.h-b._h)/c);e.h=0|l-e.y;e.w=0|(e.fillx?b.w-(b.pad<<1):e._w);e.x=0|b.x+(0|b.pad)+((1+(0|e.halign))*(b.w-(b.pad<<1)-e.w)>>1);e.c&&this.layout(e)})}};p.prototype.debug=function(b,k){b||(b=this._l);k=k||1;g.setColor(k&1,k&2,k&4).drawRect(b.x+k-1,b.y+k-1,b.x+b.w-k,b.y+b.h-k);b.pad&&g.drawRect(b.x+b.pad-1,b.y+b.pad-1,b.x+b.w-b.pad,b.y+
b.h-b.pad);k++;b.c&&b.c.forEach(d=>this.debug(d,k))};p.prototype.update=function(){function b(a){"ram";k[a.type](a);if(a.r&1){var f=a._w;a._w=a._h;a._h=f}a._w=0|Math.max(a._w+(a.pad<<1),0|a.width);a._h=0|Math.max(a._h+(a.pad<<1),0|a.height)}delete this.updateNeeded;var k={txt:function(a){a.font.endsWith("%")&&(a.font="Vector"+Math.round(g.getHeight()*a.font.slice(0,-1)/100));if(a.wrap)a._h=a._w=0;else{var f=g.setFont(a.font).stringMetrics(a.label);a._w=f.width;a._h=f.height}},btn:function(a){a.font&&
a.font.endsWith("%")&&(a.font="Vector"+Math.round(g.getHeight()*a.font.slice(0,-1)/100));var f=a.src?g.imageMetrics("function"==typeof a.src?a.src():a.src):g.setFont(a.font||"6x8:2").stringMetrics(a.label);a._h=16+f.height;a._w=20+f.width},img:function(a){var f=g.imageMetrics("function"==typeof a.src?a.src():a.src),h=a.scale||1;a._w=f.width*h;a._h=f.height*h},"":function(a){a._w=0;a._h=0},custom:function(a){a._w=0;a._h=0},h:function(a){a.c.forEach(b);a._h=a.c.reduce((f,h)=>Math.max(f,h._h),0);a._w=
a.c.reduce((f,h)=>f+h._w,0);null==a.fillx&&a.c.some(f=>f.fillx)&&(a.fillx=1);null==a.filly&&a.c.some(f=>f.filly)&&(a.filly=1)},v:function(a){a.c.forEach(b);a._h=a.c.reduce((f,h)=>f+h._h,0);a._w=a.c.reduce((f,h)=>Math.max(f,h._w),0);null==a.fillx&&a.c.some(f=>f.fillx)&&(a.fillx=1);null==a.filly&&a.c.some(f=>f.filly)&&(a.filly=1)}},d=this._l;b(d);d.fillx||d.filly?(d.w=Bangle.appRect.w,d.h=Bangle.appRect.h,d.x=Bangle.appRect.x,d.y=Bangle.appRect.y):(d.w=d._w,d.h=d._h,d.x=Bangle.appRect.w-d.w>>1,d.y=
Bangle.appRect.y+(Bangle.appRect.h-d.h>>1));this.layout(d)};p.prototype.clear=function(b){b||(b=this._l);g.reset();void 0!==b.bgCol&&g.setBgColor(b.bgCol);g.clearRect(b.x,b.y,b.x+b.w-1,b.y+b.h-1)};return p;
})();
  
const c = (function(){
  var bin=atob("n+0aesDuB3oBIxlG/e7nevju52qm7scK3+0VarTu5grx7hD6yL837kAKIO4AarDuQHpaAAL7AiJRQwbukBon7gZ6+O5mWtoHx+4lagPxAQNMvzDuZgow7iYKCivp0RfukDrbB0i/se5ACnBH2w9JQNsPyT8t6fhDLe0CiwN5n+1WegR4QniQ+AKAB+6QOsN4+O7neg5Gh+6HKgT7AhAH7pA6+O7negtGx+6HSiAhmEIC0AP4ARv655/tSEqf7Uha3+1IGp/tSBrf7UgK3+1IOmUQUBDI6wUIWCfw7kQqJe4hOjPuAQr/94v/sO5AirDuQwr/94X/xka17gB69u4AagbrBQy27ghqrkVY2gfukOr47ud6Z+6IWmDuJ3r97uVa/e7nehXukCoX7pA6dO5FWmTuoHr07uV68e4Q+sK/wRjC6wUJBPsBYfTux0rIvwH4CXDx7hD6Dd117gRa9O7levHuEPrBv8EawusFCQT7AWEB+Alw9O7mSvHuEPoL3XPuxVr07uV68e4Q+sK/wRoE+wEhAfgMcPTuxkrx7hD6C9117iNa9O7levHuEPrCvxsYBPsDIwP4DHAO8QEOpOc17gJatO7iWvHuEPqI2b3sAosBIL3o+IMAvwAAyEIAALRCAAAAADX6jjzbD8k/AAC0QwAAh0M=");
  return {
    circle:E.nativeCall(117, "int(int, int)", bin),
  };
})();
  
  var round = Math.round;
  function sin(x) {
    "compiled"
    var PI = 3.14159265358;
    // exploit symmetry - we're only accurate when x is small
    var xi = round(x/PI);
    x -= xi*PI;
    if (x>PI/2) x=PI-x;
    // Taylor series expansion of 'sin'
    var r = x; // running total
    var x2 = x*x; // precalculate x^2
    var xpow = x; // running power
    var factorial = 1; // running factorial
    var i;
    for (i=1;i<10;i++) {
      xpow = xpow*x2;
      factorial *= (i*2)*((i*2)+1);
      var term = xpow / factorial;
      if (i&1) r-=term; else r+=term;
    }
    // symmetry
    if (xi&1) r=-r;
    return r;
  }
  function cos(x) {
    "compiled"
    var PI = 3.14159265358;
    return sin(x + (PI/2));
  }
  function circle(params, data){
    "compiled"
    var w = params[0];
    var h = params[1];
    var margin = params[2];
    var p100 = params[3];
    var PI = 3.14159265358;
    var n = PI / 180.0;
    var p = p100 / 100.0;
    var thetaInc = params[4] / 100.0;
    for (var i=0; i<2500; i++) {
      data[i] = ' ';
    }
    for(var theta=0; theta<=90; theta=thetaInc+thetaInc) {
      var c = cos(theta * n);
      var s = sin(theta * n);
      var w2 = w/2;
      var h2 = h/2;
      for (var r = w2 - margin; r < w2; r++) {
        var x1 = round(r * c);
        var y1 = round(r * s);
        if (360 * p > 90 - theta) {
          var x = w2 - x1;
          var y = h2 + y1;
          data[w * y + x] = 'X';
        }
        /*if (p > 0.25 && 360 * p > 90 + theta) {
          var x = w2 - x1;
          var y = h2 - y1;
          data[w * y + x] = 'X';
        }
        if (p > 0.5 && 360 * p > 270 - theta) {
          var x = w2 + x1;
          var y = h2 - y1;
          data[w * y + x] = 'X';
        }
        if (p > 0.75 && 360 * p > 270 + theta) {
          var x = w2 + x1;
          var y = h2 + y1;
          data[w * y + x] = 'X';
        }*/
      }
    }
    return data;
  }
  
  function getCircle(ops) {
    const w = ops.w;
    const h = ops.h;
    const p = ops.p;
    const border = ops.border;
    const col = ops.col;
    // Uint8Array supports int up to 255, so max with and height is limited to that
    var params = new Uint8Array(5);
    params[0] = w;
    params[1] = h;
    params[2] = border || 1;
    params[3] = p * 100;
    params[4] = 100;
    if (w > 100) params[4] = 25;
    else if (w > 50) params[4] = 50;
    var data = new Uint8Array(w*h);
    var paramsAddr = E.getAddressOf(params,true);
    var dataAddr = E.getAddressOf(data,true);
    if (!paramsAddr) {
      params = E.toString(params);
      paramsAddr = E.getAddressOf(params,true);
    }
    if (!dataAddr) {
      data = E.toString(data);
      dataAddr = E.getAddressOf(data,true);
    }
    if (!paramsAddr || !dataAddr) throw new Error('Can\'t get data address');
    c.circle(paramsAddr, dataAddr);
    //circle(params, data);
    //console.log('DD1',data)
    //console.log('DD2',  E.toString(data))
    const img = Graphics.createImage(E.toString(data));
    img.width = w;
    img.height = h;
    img.bpp = 1;
    img.transparent = 0;
    img.palette = new Uint16Array([0, g.setColor(col).getColor()]);
    delete data;
    delete dataAddr;
    delete params;
    delete paramsAddr;
    return img;
  }
  
  
  class uiCircle {
    constructor(params) {
      params = params || {};
      this.id = params.id;
      this.type = 'custom';
      this.pad = params.pad || 0;
      this.width = params.width;
      this.height = params.height;
      this.border = params.border;
      this.p = params.p !== null && !isNaN(params.p) ? params.p : 1;
      this.cb = params.cb;
    }
    render(l) {
      l = l || this;
      const x = l.x + l.pad/2;
      const y = l.y + l.pad/2;
      const w = l.w - l.pad;
      const h = l.h - l.pad;
      g.drawImage(getCircle({ w: l.w, h: l.h, p:1, border: l.border, col: '#fff' }), x, y);
      g.drawImage(getCircle({ w: l.w, h: l.h, p: l.p, border: l.border, col: '#f00' }), x, y);
    }
  }
  
  
  
  var idx = 0;
  var steps = 40;
  var refresh = 200;
  var interval;

const testLayout = new Layout({
    type:"v",
    bgCol: g.theme.bg2,
    filly: true,
    c: [
      new uiCircle({
        id: 'circle1',
        height: 150,
        width: 150,
        pad: 4,
        border: 20,
        cb: () => {
          if (interval) stop();
          else start();
        }
      })
    ]
  });
  
  function start() {
    interval = setInterval(() => {
      testLayout.circle1.p = (1/steps) * (idx++%(steps+1));
      testLayout.render();
      //testLayout.clear(testLayout.circle1);
      //testLayout.render(testLayout.circle1);
    }, refresh);
  }
  function stop() {
    if (interval) clearInterval(interval);
    interval = null;
  }
  
  testLayout.render();